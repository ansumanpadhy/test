{
  "swagger" : "2.0",
  "info" : {
    "version" : "4.0",
    "title" : "REST API for Oracle Process Cloud Service",
    "contact" : {
      "name" : "Amit Naik",
      "email" : "amit.naik@oracle.com"
    }
  },
  "host" : "localhost:7001",
  "basePath" : "/bpm/api/4.0",
  "tags" : [ {
    "name" : "Manage AnalyticsDataobjects",
    "description" : "Retrieve AnalyticsDataobjects"
  }, {
    "name" : "Manage AnalyticsQueries",
    "description" : "Retreive, Execute and Update Analytics Queries."
  }, {
    "name" : "Manage AnalyticsQueries AggregateOperations",
    "description" : "Retrieve AnalyticsQueries."
  }, {
    "name" : "Manage Analyticsqueries-Comparisonoperators",
    "description" : "Retrieve the ComparisonOperators for AnalyticsQueries."
  }, {
    "name" : "Manage AnayticsQueries DataSources ",
    "description" : "Retreive the Data sources for Analytics Queries"
  }, {
    "name" : "Manage Archives",
    "description" : "Archive process instances and retrieve previous archives."
  }, {
    "name" : "Manage Identities",
    "description" : "Retrieve information about groups, roles, and users."
  }, {
    "name" : "Manage Metadata-Catalog",
    "description" : "Retrieve Metadata Catalog"
  }, {
    "name" : "Manage Process Definitions",
    "description" : "Retrieve process definitions, form instances, and form payloads."
  }, {
    "name" : "Manage Processes",
    "description" : "Create and retrieve information about process instances."
  }, {
    "name" : "Manage Runtime",
    "description" : "Create and retrieve information about process instances."
  }, {
    "name" : "Manage Tasks",
    "description" : "Retrieve task lists. Retrieve, create, update, and delete tasks. Manage task components such as attachments, comments, forms, and payloads."
  }, {
    "name" : "Manage Webforms",
    "description" : "Retrieve Web Form Definition"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/analyticsdataobjects" : {
      "get" : {
        "tags" : [ "Manage AnalyticsDataobjects" ],
        "summary" : "Retrieve list of links of available DataObject names. Retrieves application specific DataObjects when application name is provided",
        "description" : "",
        "operationId" : "getDataObjects",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "applicationName",
          "in" : "query",
          "description" : "application name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No data objects found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/analyticsdataobjects/{dataObjectName}" : {
      "get" : {
        "tags" : [ "Manage AnalyticsDataobjects" ],
        "summary" : "Retrieve DataObject metadata details. Retreives the metadata details of dataobject.",
        "description" : "",
        "operationId" : "getDataObjectMetaData",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dataObjectName",
          "in" : "path",
          "description" : "dataObject name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DataObjectMetadata"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No metadata found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/analyticsdataobjects/{dataObjectName}/data" : {
      "get" : {
        "tags" : [ "Manage AnalyticsDataobjects" ],
        "summary" : "Retrieve DataObject data. Retreives the data of the Dataobject for given dataobject name",
        "description" : "",
        "operationId" : "fetchDataRecords",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dataObjectName",
          "in" : "path",
          "description" : "dataobject name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "offset",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "type" : "integer",
          "default" : 3000,
          "format" : "int32"
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "since",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "totalResults",
          "in" : "query",
          "description" : "total results",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No data found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/analyticsqueries" : {
      "get" : {
        "tags" : [ "Manage AnalyticsQueries" ],
        "summary" : "Returns available OOTB and business queries. Returns available ootb(out of the box) and business queries",
        "description" : "",
        "operationId" : "getBusinessQueries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "queryType",
          "in" : "query",
          "description" : "query type : business or ootb",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage AnalyticsQueries" ],
        "summary" : "Retreive or Execute an Analytics query. Retreives or Executes a saved analytics query with given id",
        "description" : "",
        "operationId" : "createOrExecuteBusinessQuery",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "action",
          "in" : "query",
          "description" : "action value to execute or not",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Link"
            }
          },
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/AnalyticsResult"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/analyticsqueries-aggregateoperations" : {
      "get" : {
        "tags" : [ "Manage AnalyticsQueries AggregateOperations" ],
        "summary" : "Retrieves supported aggregate operations.Retrieves a List of supported aggregate operations.",
        "description" : "",
        "operationId" : "getAggregateOperations",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No result found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/analyticsqueries-comparisonoperators" : {
      "get" : {
        "tags" : [ "Manage Analyticsqueries-Comparisonoperators" ],
        "summary" : "Retrieves list of supported comparison operators. Retrieves list of supported comparison operators for a given column data type",
        "description" : "",
        "operationId" : "getComparisonOperators",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "columnDataType",
          "in" : "query",
          "description" : "column Data Type",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No result found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/analyticsqueries-datasources" : {
      "get" : {
        "tags" : [ "Manage AnayticsQueries DataSources " ],
        "summary" : "Retrieves analytics data sources. Retrieves list of available analytics data sources.",
        "description" : "",
        "operationId" : "getDataSources",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No result found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/analyticsqueries-datasources/{dataSource}" : {
      "get" : {
        "tags" : [ "Manage AnayticsQueries DataSources " ],
        "summary" : "Returns links of dataSource columns. Returns Links of dataSource columns for given dataSource",
        "description" : "",
        "operationId" : "getDataSourceChildResourceLink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dataSource",
          "in" : "path",
          "description" : "DataSource value",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Link"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/analyticsqueries-datasources/{dataSource}/columns" : {
      "get" : {
        "tags" : [ "Manage AnayticsQueries DataSources " ],
        "summary" : "Retrieves list of available columns for a given datasource and application name. Determines the available columns by inspecting the corresponding analytics datasource.",
        "description" : "",
        "operationId" : "getDataSourceColumns",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dataSource",
          "in" : "path",
          "description" : "DataSource value",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "applicationName",
          "in" : "query",
          "description" : "application name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No result found"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/analyticsqueries/{businessQueryId}" : {
      "get" : {
        "tags" : [ "Manage AnalyticsQueries" ],
        "summary" : "Retrieve Analytics Result for a Business Query or OOTB (out of the box). Retrieve the analytics results after executing a saved business query with given id or OOTB query name.",
        "description" : "",
        "operationId" : "getAnalyticsQuery",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "businessQueryId",
          "in" : "path",
          "description" : "ootbquery name or businessquery id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "processNames",
          "in" : "query",
          "description" : "Process name",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "assigneeType",
          "in" : "query",
          "description" : "Assignee type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "topN",
          "in" : "query",
          "description" : "topN",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "since",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "applicationName",
          "in" : "query",
          "description" : "application name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "action value to execute or not",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BusinessQuery"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No result found for query"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "put" : {
        "tags" : [ "Manage AnalyticsQueries" ],
        "summary" : "Updates a  business query. Update a saved business query with given business query Id",
        "description" : "",
        "operationId" : "updateBusinessQuery",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "businessQueryId",
          "in" : "path",
          "description" : "BusinessQuery id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Link"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Manage AnalyticsQueries" ],
        "summary" : "Deletes a  business query. Deletes an existing business query.",
        "description" : "",
        "operationId" : "deleteBusinessQuery",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "businessQueryId",
          "in" : "path",
          "description" : "BusinessQuery id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No business query found with provided id"
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    },
    "/archives" : {
      "get" : {
        "tags" : [ "Manage Archives" ],
        "summary" : "List Archive Export Jobs.",
        "description" : " Lists the available archive export jobs in JSON format.",
        "operationId" : "getArchives",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of archive export jobs to list - default 25",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset value - default 0",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Archives"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage Archives" ],
        "summary" : "Archive Process Instances.",
        "description" : " The POST returns the canonical URI and job ID for the archive; the deleteInstances=true option, which deletes archived process instances from Workspace, is a property of the payload; When deleteInstances=true is set, you must also set deleteRetention in XML dateTime format; After creating an archive, you cannot create another archive for the same application for 24 hours.",
        "operationId" : "requestArchive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "ArchiveRequest to be processed",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ArchiveRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Process Instances successfully archived.",
            "schema" : {
              "$ref" : "#/definitions/RequestResponse"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/archives/{id}" : {
      "get" : {
        "tags" : [ "Manage Archives" ],
        "summary" : "Retrieve a Process Instance Archive.",
        "description" : "Retrieves a completed process instance archive by archive ID. Get the ID from the POST response body.",
        "operationId" : "getArchive",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Value of Archive ID. Get the ID from the POST response body",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Archive"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/archives/{id}/exports" : {
      "get" : {
        "tags" : [ "Manage Archives" ],
        "summary" : "List Process Instance Archives.",
        "description" : " Lists previously exported process instance archives, in JSON format, that are available for download, as a list of canonical links.",
        "operationId" : "getExports",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Value of Archive ID. Get the ID from the POST response body",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of archive export jobs to list - default 25",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset value - default 0",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Exports"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/archives/{id}/exports/{part}" : {
      "get" : {
        "tags" : [ "Manage Archives" ],
        "summary" : "Download a Process Instance Archive File.",
        "description" : " Returns a previously exported process instance archive file as a stream. An archive can be in multiple files, or parts. If you are using cURL, use the -o option to save the response to a file.",
        "operationId" : "downloadArchive",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Value of Archive ID. Get the ID from the POST response body",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "part",
          "in" : "path",
          "description" : "Value of the part to download.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "204" : {
            "description" : "No Content.The archive is not available."
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/identities" : {
      "get" : {
        "tags" : [ "Manage Identities" ],
        "summary" : "Retrieve Identities.",
        "description" : " Retrieves roles, groups and users",
        "operationId" : "getIdentities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchPattern",
          "in" : "query",
          "description" : "Pattern to search for, for example identities?searchPattern=admin",
          "required" : false,
          "type" : "string",
          "default" : "*"
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "Search scope - all (default), user, group, role",
          "required" : false,
          "type" : "string",
          "default" : "all"
        }, {
          "name" : "firstname",
          "in" : "query",
          "description" : "First name of the identity to search",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastname",
          "in" : "query",
          "description" : "Last name of the identity to search",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Email of the identity to search",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of identities to be retrieved - default 25",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The offset value - default 0",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "totalResult",
          "in" : "query",
          "description" : "Total Result - true or false",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Identities not found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/identities/group/{groupid}" : {
      "get" : {
        "tags" : [ "Manage Identities" ],
        "summary" : "Retrieve a Group.",
        "description" : " Retrieves a group by group ID.",
        "operationId" : "getGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupid",
          "in" : "path",
          "description" : "The value of the group ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Group not found for ID"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/identities/group/{groupid}/users" : {
      "get" : {
        "tags" : [ "Manage Identities" ],
        "summary" : "Retrieve users in a group.",
        "description" : " Retrieves user details of a group by group ID",
        "operationId" : "getUsersInGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupid",
          "in" : "path",
          "description" : "The value of the group ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "totalResult",
          "in" : "query",
          "description" : "Total Result - true or false",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Users not found for group ID"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/identities/loggedInUser" : {
      "get" : {
        "tags" : [ "Manage Identities" ],
        "summary" : "Retrieve Logged in User.",
        "description" : " Retrieves user details of a logged in user",
        "operationId" : "loggedInUser",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "User not found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/identities/role/{roleid}" : {
      "get" : {
        "tags" : [ "Manage Identities" ],
        "summary" : "Retrieve a Role.",
        "description" : " Retrieves a user role by role ID.",
        "operationId" : "getRole",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "roleid",
          "in" : "path",
          "description" : "The value of the role ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Role"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Role not found for ID"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/identities/user/{userid}" : {
      "get" : {
        "tags" : [ "Manage Identities" ],
        "summary" : "Retrieve a User.",
        "description" : " Retrieve a user by user ID.",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userid",
          "in" : "path",
          "description" : "The value of the user ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "User not found for ID"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/metadata-catalog" : {
      "get" : {
        "tags" : [ "Manage Metadata-Catalog" ],
        "summary" : "Retrieve Metadata Catalog for All APIs.",
        "description" : " Retrieves metadata catalog for all APIs.",
        "operationId" : "getMetadataCatalog",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Catalog"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/metadata-catalog/{resourceName}" : {
      "get" : {
        "tags" : [ "Manage Metadata-Catalog" ],
        "summary" : "Retrieve All Resource Schema.",
        "description" : " Retrieves the resource schema for all services supported in REST.",
        "operationId" : "getResourceSchema",
        "produces" : [ "application/schema+json" ],
        "parameters" : [ {
          "name" : "resourceName",
          "in" : "path",
          "description" : "resource name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/process-definitions" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve Process Definitions.",
        "description" : " Retrieves process definitions.",
        "operationId" : "getDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "interfaceFilter",
          "in" : "query",
          "description" : "Filters the process definitions based on start type, currently supports filters for form based start (includes both webForm and basicForm), webForm based start, basicForm based start, doc based start and folder based start.",
          "required" : false,
          "type" : "string",
          "default" : "all",
          "enum" : [ "all", "form", "noForm", "basicForm", "webForm", "doc", "folder" ]
        }, {
          "name" : "showProcessInstancesCount",
          "in" : "query",
          "description" : "True to get processcount else false",
          "required" : false,
          "type" : "string",
          "default" : "false"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ProcessDefs"
            }
          },
          "500" : {
            "description" : "Error in retrieving the process definitions"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/conversations" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve the List of Conversations.",
        "description" : " Retrieves the conversations metadata associated with a process definition ID.",
        "operationId" : "getConversations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Retrieves only the conversation for the specified conversation name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the conversations metadata or empty list when there aren't any.",
            "schema" : {
              "$ref" : "#/definitions/Conversations"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the conversations"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/conversations/{conversationName}" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve the conversation metadata.",
        "description" : " Retrieves the conversation metadata for a conversation associated with a given process definition ID.",
        "operationId" : "getConversation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "conversationName",
          "in" : "path",
          "description" : "Conversation name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the conversations metadata or empty list when there aren't any.",
            "schema" : {
              "$ref" : "#/definitions/Conversation"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the conversations metadata information"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/documents" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve the folders and documents metadata.",
        "description" : " Retrieves the folders and documents metadata information for a process definition ID.",
        "operationId" : "getDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expanded",
          "in" : "query",
          "description" : "Value of all fields that are to be expanded (detailed) - all,incoming-folders, managed-folders, incoming-documents, none. If not specified Links to each of the fields is returned.",
          "required" : false,
          "type" : "string",
          "default" : "none"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the folders and documents.",
            "schema" : {
              "$ref" : "#/definitions/Documents"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the folders and documents information"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/documents/incoming-documents" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve the incoming documents metadata.",
        "description" : " Retrieves the documents metadata information for a process definition ID.",
        "operationId" : "getIncomingDocuments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Retrieves only the document for the specified document name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the documents."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the document information"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/documents/incoming-documents/{documentName}" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve an incoming document metadata.",
        "description" : " Retrieves the folder metadata information for a given incoming document and a process definition ID.",
        "operationId" : "getIncomingDocument",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "documentName",
          "in" : "path",
          "description" : "Name of the document.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the incoming document metadata.",
            "schema" : {
              "$ref" : "#/definitions/IncomingDocument"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the incoming document metadata information"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/documents/incoming-folders" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve the incoming folders metadata.",
        "description" : " Retrieves the folders metadata information for a process definition ID.",
        "operationId" : "getIncomingFolders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Retrieves only the folder for the specified folder name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the folders.",
            "schema" : {
              "$ref" : "#/definitions/IncomingFolders"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the folder information"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/documents/incoming-folders/{folderName}" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve an incoming folder metadata.",
        "description" : " Retrieves the folder metadata information for a given folder and a process definition ID.",
        "operationId" : "getIncomingFolder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "folderName",
          "in" : "path",
          "description" : "Name of the folder.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the folder.",
            "schema" : {
              "$ref" : "#/definitions/IncomingFolder"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the folder information"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/documents/managed-folders" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve the managed folders metadata.",
        "description" : " Retrieves the folders metadata information for a process definition ID.",
        "operationId" : "getManagedFolders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Retrieves only the folder for the specified folder name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startupFlag",
          "in" : "query",
          "description" : "Retrieves the default startup folder if true, else (default) returns all folders",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the folders."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the folder information"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/documents/managed-folders/{folderName}" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve a managed folder metadata.",
        "description" : " Retrieves the folder metadata information for a given folder and a process definition ID.",
        "operationId" : "getManagedFolder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "folderName",
          "in" : "path",
          "description" : "Name of the folder.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the folders."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the folder information"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/startFolderName" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve the Startup Folder Name.",
        "description" : " Retrieves the start folder name for a process definition ID.",
        "operationId" : "getStartupFolder",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the startup folder name."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the startup folder name"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/{serviceName}/form" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve a Form Instance.",
        "description" : " Retrieves the form instance for the process definitions with the given ID",
        "operationId" : "getFormInstance",
        "produces" : [ "multipart/mixed" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Value of service name of the process.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "operation",
          "in" : "query",
          "description" : "Specifies the operation performed. Use the Retrieve Process Definitions endpoint to list process definition data, including operations.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeAttachments",
          "in" : "query",
          "description" : "If true (default), returns any saved attachments as body parts along with the form URL",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns a multipart response. The first body part is a plain text containing the form instance URL. The remaining body parts will be attachments if the process contains any saved attachments."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the form Instance URL"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/{serviceName}/form/payload" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve a Form Payload.",
        "description" : " Retrieves the form payload for the given form instance URL.",
        "operationId" : "getFrevvoPayload",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Value of service name of the process.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "formInstanceURL",
          "in" : "query",
          "description" : "Value of the form instance URL whose payload is to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "operation",
          "in" : "query",
          "description" : "Specifies the operation performed. Use the Retrieve Process Definitions endpoint to list process definition data, including operations.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the form payload value.",
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the form payload"
          }
        }
      }
    },
    "/process-definitions/{processDefId}/{serviceName}/webform" : {
      "get" : {
        "tags" : [ "Manage Process Definitions" ],
        "summary" : "Retrieve a Form Instance.",
        "description" : " Retrieves the form instance for the process definitions with the given ID",
        "operationId" : "getWebFormMultipart",
        "produces" : [ "multipart/mixed" ],
        "parameters" : [ {
          "name" : "processDefId",
          "in" : "path",
          "description" : "Value of process definition ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "Value of service name of the process.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "operation",
          "in" : "query",
          "description" : "Specifies the operation performed. Use the Retrieve Process Definitions endpoint to list process definition data, including operations.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeAttachments",
          "in" : "query",
          "description" : "If true (default), returns any saved attachments as body parts along with the form URL",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns a multipart response. The first body part is a JSON containing the form instance URL and optional payload if saved earlier. The remaining body parts will be attachments if the process contains any saved attachments."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Form not found."
          },
          "500" : {
            "description" : "Error in retrieving the form Instance URL"
          }
        }
      }
    },
    "/processes" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieves Process Instance List.",
        "description" : " Retrieves process instance list",
        "operationId" : "getProcesses",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "view",
          "in" : "query",
          "description" : "View name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "processDefId",
          "in" : "query",
          "description" : "Process definition ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "processName",
          "in" : "query",
          "description" : "Processinstance name",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "priority",
          "in" : "query",
          "description" : "Process priority from 1 (highest) to 5 (lowest) or Any (default)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "processOwner",
          "in" : "query",
          "description" : "Process instance owner",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "processCreator",
          "in" : "query",
          "description" : "Process instance creator",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "processState",
          "in" : "query",
          "description" : "Process state",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "default" : "OPEN"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "assignmentFilter",
          "in" : "query",
          "description" : "Assignment filter",
          "required" : false,
          "type" : "string",
          "default" : "MY_AND_GROUP"
        }, {
          "name" : "dueDateFrom",
          "in" : "query",
          "description" : "Start of due date range in the format yyyy-mm-dd hh:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dueDateTo",
          "in" : "query",
          "description" : "End of due date range in the format yyyy-mm-dd hh:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of items per page, between 1 and 100, default 25",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index for the first item on a page of list items",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Field with which results are to be ordered",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "totalResult",
          "in" : "query",
          "description" : "Total Result - true or false",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "Returned items must be created or updated later than the specified time, format yyyy-mm-dd hh:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "until",
          "in" : "query",
          "description" : "Returned items must be created or updated before the specified time, format yyyy-mm-dd hh:mm:ss",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Process list not found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Create a Process Instance.",
        "description" : " Creates a new process instance or saves a process instance based on the value of action in the input. The resource takes a multipart input if looking to create a process instance with attachments - JSON as first body  part and attachments as the remaining body parts. The process instance can also be created with only JSON payload to create a process instance if attachments are not needed. The operation and serviceName values in the input payload are optional - if not specified 'operation' defaults to 'start'.",
        "operationId" : "postMessage",
        "consumes" : [ "multipart/mixed" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Process Instance succesfully created",
            "schema" : {
              "$ref" : "#/definitions/ProcessInstance"
            }
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "put" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Perform Actions on List of Instances.",
        "description" : " Performs actions on instance list",
        "operationId" : "performActionsOnInstanceList",
        "produces" : [ "application/json", "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "304" : {
            "description" : "Not Modified"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/processes/{processId}" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieve a Process Instance.",
        "description" : " Retrieves a process instance",
        "operationId" : "getProcess",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "isProcessNumberFlag",
          "in" : "query",
          "description" : "Value of processNumber, if true it will fetch process instance by number, if false it will return process instance by instanceId",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ProcessInstance"
            }
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "put" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Update the Process State.",
        "description" : " Updates the state of the  process to the action value. ",
        "operationId" : "performProcessAction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json", "text/plain" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload of process",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Action"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "304" : {
            "description" : "Not Modified"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not Found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/processes/{processId}/attachments" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieve Attachment List for a Process Instance.",
        "description" : " Retrieves a list of attachments for a process instance.",
        "operationId" : "getProcessAttachments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Add Attachment to the Process.",
        "description" : " Adds attachments to a process. ",
        "operationId" : "addProcessAttachment",
        "consumes" : [ "multipart/mixed" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "multiPartAttachment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MultiPart"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/processes/{processId}/attachments/{attachmentId}" : {
      "delete" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Delete Process Attachments.",
        "description" : " Deletes process attachments.",
        "operationId" : "deleteProcessAttachment",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "Value of attachment name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/processes/{processId}/audit" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieve Audit Diagram of Process Instance.",
        "description" : " Retrieves the audit diagram of a process instance.",
        "operationId" : "getAuditDiagram",
        "produces" : [ "image/png", "application/json", "text/plain" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "graphic",
          "in" : "query",
          "description" : "Value of graphic mode, true for png output, false for histories",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/processes/{processId}/comments" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieve Comment List for a Process Instance.",
        "description" : " Retrieves a list of comments for a process instance.",
        "operationId" : "getProcessComments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Add Comment to the Process.",
        "description" : " Adds comments to a process",
        "operationId" : "addProcessComments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CommentRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CommentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/processes/{processId}/conversations" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieve Conversations for a Process Instance",
        "description" : "Retrieves the conversations associated with the process instance.",
        "operationId" : "getConversationsByProcessId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Retrieves only the conversation for the specified conversation name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the conversations or empty list when there aren't any.",
            "schema" : {
              "$ref" : "#/definitions/ConversationInstances"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the conversation information"
          }
        }
      }
    },
    "/processes/{processId}/conversations/{conversationId}" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieve a Conversation for a Process Instance",
        "description" : "Retrieve conversations associated with the process instance based on conversationId.",
        "operationId" : "getConversationByProcessId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of process ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "conversationId",
          "in" : "path",
          "description" : "Value of conversation ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success. Returns the conversations or empty list when there aren't any.",
            "schema" : {
              "$ref" : "#/definitions/ConversationInstance"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "500" : {
            "description" : "Error in retrieving the conversation information"
          }
        }
      }
    },
    "/processes/{processId}/folders" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieve list of DOCs Folders for a Process",
        "description" : " Retrieves the DOCs folders associated with a process.",
        "operationId" : "getProcessFolders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of Process ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Retrieves only the folder for the specified folder name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DcsFolders"
            }
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/processes/{processId}/folders/{folderId}" : {
      "get" : {
        "tags" : [ "Manage Processes" ],
        "summary" : "Retrieve DOCs Folder for a Process",
        "description" : " Retrieves the folder details for a given folder associated with a process.",
        "operationId" : "getProcessFolderById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processId",
          "in" : "path",
          "description" : "Value of Process Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "folderId",
          "in" : "path",
          "description" : "Folder ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DcsFolder"
            }
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/runtime" : {
      "get" : {
        "tags" : [ "Manage Runtime" ],
        "summary" : "Retrieve Supported Feature List.",
        "description" : " Retrieves list of features supported by runtime.",
        "operationId" : "getRuntime",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/BPMRuntimeInfo"
            }
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve a Task List.",
        "description" : " Retrieves a task list for the current user.",
        "operationId" : "getTasks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Task status",
          "required" : false,
          "type" : "string",
          "default" : "ASSIGNED",
          "enum" : [ "ASSIGNED", "SUSPENDED", "WITHDRAWN", "EXPIRED", "ERROR", "ALERTED", "NEED_INFORMATION" ]
        }, {
          "name" : "priority",
          "in" : "query",
          "description" : "Task priority from 1 (highest) to 5 (lowest) or Any (default)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "dueDateFrom",
          "in" : "query",
          "description" : "Start of due date range in the format yyyy-mm-dd hh:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dueDateTo",
          "in" : "query",
          "description" : "End of due date range in the format yyyy-mm-dd hh:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assignment",
          "in" : "query",
          "description" : "Task assignees - MY, GROUP, MY_AND_GROUP (default), MY_AND_GROUP_ALL, REPORTEES, OWNER, REVIEWER, PREVIOUS, ALL, ADMIN",
          "required" : false,
          "type" : "string",
          "default" : "MY_AND_GROUP"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "Keyword in task title",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fromuser",
          "in" : "query",
          "description" : "Previous task assignee in process",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "process",
          "in" : "query",
          "description" : "Includes only tasks in a given process",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of items per page, between 1 and 100, default 25",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index for the first item on a page of list items",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Field with which results are to be ordered. Given as orderBy=fieldname:asc/desc default is asc for ascending.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Displays only the selected task attributes",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "pattern",
          "in" : "query",
          "description" : "Filters tasks",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "showAction",
          "in" : "query",
          "description" : "Show Action - true or false",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "showPermission",
          "in" : "query",
          "description" : "Show Permission - true or false",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "metadata",
          "in" : "query",
          "description" : "Metadata - true or false",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "totalResult",
          "in" : "query",
          "description" : "Total Result - true or false",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "noPagingFlag",
          "in" : "query",
          "description" : "No paging - true or false",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Task list not found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Create a Task.",
        "description" : " Creates a new task and returns the task ID.",
        "operationId" : "createTask",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Task Created Successfully. Returns response contains a link to created task.",
            "schema" : {
              "$ref" : "#/definitions/Link"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not Found. New task is not created."
          },
          "409" : {
            "description" : "Conflict."
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "put" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Perform Bulk Action on Tasks.",
        "description" : " Performs action on multiple tasks based on the payload.",
        "operationId" : "performBulkActions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Task list not found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/views" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve Custom Task Lists.",
        "description" : " Retrieves a list of custom task lists (views) that the current user has defined.",
        "operationId" : "getViews",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Views"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No view available."
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/views/{viewname}" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve a Custom Task List.",
        "description" : " Retrieves a custom task list by name.",
        "operationId" : "getViewBasedTasks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "viewname",
          "in" : "path",
          "description" : "View Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Task status - ASSIGNED (default), SUSPENDED, WITHDRAWN, EXPIRED, ERROR, ALERTED, NEED_INFORMATION",
          "required" : false,
          "type" : "string",
          "default" : "ASSIGNED"
        }, {
          "name" : "priority",
          "in" : "query",
          "description" : "Task priority from 1 (highest) to 5 (lowest) or Any (default)",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "default" : "Any"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "fromuser",
          "in" : "query",
          "description" : "Previous task assignee in process",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "process",
          "in" : "query",
          "description" : "Includes only tasks in a given process",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "dueDateFrom",
          "in" : "query",
          "description" : "Start of due date range in the format yyyy-mm-dd hh:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dueDateTo",
          "in" : "query",
          "description" : "End of due date range in the format yyyy-mm-dd hh:mm:ss",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "assignment",
          "in" : "query",
          "description" : "Task assignees - MY, GROUP,  MY&#95;AND&#95;GROUP (default), MY&#95;AND&#95;GROUP_ALL, REPORTEES, OWNER, REVIEWER, PREVIOUS, ALL, ADMIN",
          "required" : false,
          "type" : "string",
          "default" : "MY_AND_GROUP"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "Keyword in task title",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of items per page, between 1 and 100, default 25",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Index for the first item on a page of list items, default 1",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "groupBy",
          "in" : "query",
          "description" : "Groups tasks by the selected task attribute",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pattern",
          "in" : "query",
          "description" : "Includes only to-do tasks if set to ToDo",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "Action",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "showPermission",
          "in" : "query",
          "description" : "Permission - true or false",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "metadata",
          "in" : "query",
          "description" : "Metadata - true or false(default)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "totalResult",
          "in" : "query",
          "description" : "Total Result - true (default) or false",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "noPaging",
          "in" : "query",
          "description" : "No paging - true or false",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Collection"
            }
          },
          "206" : {
            "description" : "Partial Content"
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Task List not found for view"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve a Task.",
        "description" : " Retrieves a task by task ID.",
        "operationId" : "getTask",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "expanded",
          "in" : "query",
          "description" : "Value of all fields that are to be expanded (detailed) - All, comments, attachments, history, payload, none. If not specified Links to each of the fields is returned. ",
          "required" : true,
          "type" : "string",
          "default" : "none"
        }, {
          "name" : "metadata",
          "in" : "query",
          "description" : "Metadata - true or false",
          "required" : true,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Task"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Task not found for given ID."
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "put" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Perform Action on Task.",
        "description" : " Performs the action based on payload on a given task ID.",
        "operationId" : "performTaskAction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Payload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Task"
            }
          },
          "400" : {
            "description" : "The tasknumber is invalid.No action will be performed."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Task not found."
          },
          "409" : {
            "description" : "Conflict."
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/attachments" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve Task Attachments.",
        "description" : " Retrieves task attachments.",
        "operationId" : "getTaskAttachments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Attachments"
            }
          },
          "400" : {
            "description" : "The tasknumber is invalid."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Attachments not found for task"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Add a Task Attachment.",
        "description" : " Adds an attachment to a task.",
        "operationId" : "addTaskAttachments",
        "consumes" : [ "multipart/mixed" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Attachment successfully added",
            "schema" : {
              "$ref" : "#/definitions/Attachments"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Task not found"
          },
          "409" : {
            "description" : "Stale task object found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/attachments/{attachmentName}" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve a Task Attachment by Name.",
        "description" : " Retrieves an attachment by name.",
        "operationId" : "getTaskAttachment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attachmentName",
          "in" : "path",
          "description" : "Attachment name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Bad Request."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Attachment with given name not found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "delete" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Delete a Task Attachment.",
        "description" : " Deletes an attachment by name.",
        "operationId" : "deleteTaskAttachment",
        "produces" : [ "text/plain", "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attachmentName",
          "in" : "path",
          "description" : "Name of attachment to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Attachment Removed Successfully."
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Conflict"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/attachments/{attachmentName}/stream" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve a Task Attachment as a Stream.",
        "description" : " Retrieves an attachment by name as a stream.",
        "operationId" : "getTaskAttachmentStream",
        "produces" : [ "multipart/mixed", "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attachmentName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Displays the file contents. Response type will be based on the mime type of the attachment."
          },
          "400" : {
            "description" : "Bad Request."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "No inputstream exists for attachment with given name"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/comments" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve Task Comments.",
        "description" : " Retrieves task comments.",
        "operationId" : "getTaskComments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Add a Task Comment.",
        "description" : " Adds a comment to a task.",
        "operationId" : "addTaskComment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task Id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CommentRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CommentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Comment successfully added",
            "schema" : {
              "$ref" : "#/definitions/Comments"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Task not found"
          },
          "409" : {
            "description" : "Stale task object found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/conversations" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve a List of Task Conversations",
        "description" : " Retrieves the conversations associated with a task.",
        "operationId" : "getConversationsByTaskId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Retrieves only the conversation for the specified conversation name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ConversationInstances"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Conversations not found for given task"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/conversations/{conversationId}" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve a Task Conversation",
        "description" : " Retrieves the Conversation associated with a task based on a given conversationId.",
        "operationId" : "getConversationById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task Id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "conversationId",
          "in" : "path",
          "description" : "conversationId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ConversationInstance"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Conversation not found for given task"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/folders" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve Task DOCs Folder Details By FolderId for a Task",
        "description" : " Retrieves the DOCs folders associated with a task.",
        "operationId" : "getTaskFolders",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Retrieves only the folder for the specified folder name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DcsFolders"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "DoCs Folders not found for given task"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/folders/{folderId}" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve Task DOCs Folder Details By FolderId for a Task",
        "description" : " Retrieves the folder details for a given folder associated with a task.",
        "operationId" : "getTaskFolder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "folderId",
          "in" : "path",
          "description" : "Folder ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DcsFolder"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Folder details not found for given folder"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/form" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve a Task Form.",
        "description" : " Retrieves the web form associated with a task.",
        "operationId" : "getTaskForm",
        "produces" : [ "text/html", "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "user-agent",
          "in" : "header",
          "description" : "User-agent",
          "required" : false,
          "type" : "string",
          "default" : ""
        }, {
          "name" : "readOnly",
          "in" : "query",
          "description" : "To retrieve a read only form uri - True; else false",
          "required" : false,
          "type" : "string",
          "default" : "false"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Frevvo Form URL not found for given task"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/form/live" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve Live Form URI.",
        "description" : " Retrieves the live form URI",
        "operationId" : "getFrevvoForm",
        "produces" : [ "text/plain", "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "getURI",
          "in" : "query",
          "description" : "True to get the URI as string else false",
          "required" : false,
          "type" : "string",
          "default" : "false"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Frevvo Form URL not found for given task"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "put" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Update Form.",
        "description" : " Updates the changes done to the form of a given task by task ID. It takes the payload value as input along with a cookie parameter 'frevvoFormInstance'",
        "operationId" : "updateFrevvoChanges",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Bad Request."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "409" : {
            "description" : "Conflict"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/history" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve Task History.",
        "description" : " Retrieves the history of a task.",
        "operationId" : "getTaskHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "displayStyle",
          "in" : "query",
          "description" : "Style in which to display the history of given task ID - flatList (default)",
          "required" : true,
          "type" : "string",
          "default" : "flatList"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TaskHistories"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Task History not found"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/tasks/{id}/payload" : {
      "get" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Retrieve the Task Payload.",
        "description" : " Retrieves the payload of a task. NOTE: The response payload can be of type xml or json.",
        "operationId" : "getTaskSummaryField",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TaskSummaryField"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Task Payload not found"
          },
          "409" : {
            "description" : "Conflict"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      },
      "post" : {
        "tags" : [ "Manage Tasks" ],
        "summary" : "Update the Task Payload.",
        "description" : " Updates the payload of a task.",
        "operationId" : "updateTaskSummaryField",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain", "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Task ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Updated Task Payload in JSON",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Task payload successfully updated."
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "409" : {
            "description" : "Conflict"
          },
          "500" : {
            "description" : "Something went wrong"
          }
        }
      }
    },
    "/webforms/{id}" : {
      "get" : {
        "tags" : [ "Manage Webforms" ],
        "summary" : "Get PCS Web Form Metadata.",
        "description" : " Retrieves PCS Web Form's JSON metadata by its ID.",
        "operationId" : "getWebForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Web Form Definition ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Form not found for given ID."
          },
          "500" : {
            "description" : "Internal Server Error"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "AbstractProcessDef" : {
      "type" : "object",
      "properties" : {
        "processDefId" : {
          "type" : "string"
        },
        "processName" : {
          "type" : "string"
        },
        "application" : {
          "type" : "string"
        },
        "revision" : {
          "type" : "string"
        },
        "domain" : {
          "type" : "string"
        },
        "interfaces" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Interface"
          }
        },
        "processIcon" : {
          "$ref" : "#/definitions/ProcessIcon"
        },
        "processCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isDocsEnabledFlag" : {
          "type" : "boolean",
          "default" : false
        },
        "isConversationEnabledFlag" : {
          "type" : "boolean",
          "default" : false
        },
        "category" : {
          "type" : "string"
        }
      }
    },
    "Action" : {
      "type" : "object",
      "properties" : {
        "assignees" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Identity"
          }
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "processes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "faultActionType" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "action",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/processdef"
      }
    },
    "AnalyticsResult" : {
      "type" : "object",
      "properties" : {
        "columnsInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ColumnMetadata"
          }
        },
        "rows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Row"
          }
        }
      },
      "xml" : {
        "name" : "analyticsResult",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/analyticsResult"
      }
    },
    "Archive" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "requestedBy" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "exports" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExportLink"
          }
        },
        "requester" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "archive",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/archive"
      }
    },
    "ArchiveRequest" : {
      "type" : "object",
      "properties" : {
        "composites" : {
          "$ref" : "#/definitions/Composites"
        },
        "compositeStates" : {
          "$ref" : "#/definitions/CompositeStates"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "deleteInstances" : {
          "type" : "boolean",
          "default" : false
        },
        "deleteRetention" : {
          "type" : "string",
          "format" : "date-time"
        },
        "autoArchiveEnabled" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "archiveRequest",
        "namespace" : "http://xmlns.oracle.com/bpm/archive/request"
      }
    },
    "Archives" : {
      "type" : "object",
      "xml" : {
        "name" : "tasks",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/archives"
      }
    },
    "Arg" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "$ref" : "#/definitions/QName"
        },
        "schema" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "primitive" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "Attachment" : {
      "type" : "object",
      "properties" : {
        "attachmentName" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "mimeType" : {
          "type" : "string"
        },
        "attachmentScope" : {
          "type" : "string"
        },
        "attachmentSize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "docAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GenericMap"
          }
        },
        "input" : {
          "type" : "string"
        },
        "uri" : {
          "$ref" : "#/definitions/Link"
        }
      },
      "xml" : {
        "name" : "attachment",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "Attachments" : {
      "type" : "object",
      "xml" : {
        "name" : "attachments",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "BPMRuntimeInfo" : {
      "type" : "object",
      "properties" : {
        "features" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      },
      "xml" : {
        "name" : "runtime",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/runtime"
      }
    },
    "BodyPart" : {
      "type" : "object",
      "properties" : {
        "entity" : {
          "type" : "object"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        },
        "parent" : {
          "$ref" : "#/definitions/MultiPart"
        },
        "providers" : {
          "$ref" : "#/definitions/Providers"
        },
        "parameterizedHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ParameterizedHeader"
            }
          }
        },
        "contentDisposition" : {
          "$ref" : "#/definitions/ContentDisposition"
        }
      }
    },
    "BusinessQuery" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "dataSource" : {
          "type" : "string",
          "enum" : [ "PROCESS", "ACTIVITY", "ASSIGNMENT" ]
        },
        "applicationName" : {
          "type" : "string"
        },
        "queryType" : {
          "type" : "string",
          "enum" : [ "FLAT", "GROUP" ]
        },
        "dataSeries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataSeriesEntry"
          }
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "timeGroupings" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/TimeGrouping"
          }
        },
        "legend" : {
          "type" : "string"
        },
        "filter" : {
          "$ref" : "#/definitions/Filter"
        },
        "topN" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastNDays" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sortEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortEntry"
          }
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Property"
          }
        }
      },
      "xml" : {
        "name" : "businessQuery",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
      }
    },
    "Catalog" : {
      "type" : "object",
      "xml" : {
        "name" : "catalog",
        "namespace" : "http://xmlns.oracle.com/bpm/api"
      }
    },
    "Collection" : {
      "type" : "object",
      "properties" : {
        "totalResult" : {
          "type" : "boolean",
          "xml" : {
            "name" : "totalResults"
          },
          "default" : false
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userLink" : {
          "xml" : {
            "name" : "user"
          },
          "$ref" : "#/definitions/Link"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasMore" : {
          "type" : "boolean",
          "default" : false
        },
        "items" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      },
      "xml" : {
        "name" : "Collection",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/v3/common/"
      }
    },
    "CollectionGroup" : {
      "type" : "object",
      "properties" : {
        "totalResult" : {
          "type" : "boolean",
          "default" : false
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userLink" : {
          "xml" : {
            "name" : "user"
          },
          "$ref" : "#/definitions/Link"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasMore" : {
          "type" : "boolean",
          "default" : false
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Group"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      },
      "xml" : {
        "name" : "Collection",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/v3/common/"
      }
    },
    "CollectionIdentity" : {
      "type" : "object",
      "properties" : {
        "totalResult" : {
          "type" : "boolean",
          "default" : false
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userLink" : {
          "xml" : {
            "name" : "user"
          },
          "$ref" : "#/definitions/Link"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasMore" : {
          "type" : "boolean",
          "default" : false
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Identity"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      },
      "xml" : {
        "name" : "Collection",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/v3/common/"
      }
    },
    "CollectionRole" : {
      "type" : "object",
      "properties" : {
        "totalResult" : {
          "type" : "boolean",
          "default" : false
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userLink" : {
          "xml" : {
            "name" : "user"
          },
          "$ref" : "#/definitions/Link"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasMore" : {
          "type" : "boolean",
          "default" : false
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Role"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      },
      "xml" : {
        "name" : "Collection",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/v3/common/"
      }
    },
    "CollectionUser" : {
      "type" : "object",
      "properties" : {
        "totalResult" : {
          "type" : "boolean",
          "default" : false
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userLink" : {
          "xml" : {
            "name" : "user"
          },
          "$ref" : "#/definitions/Link"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasMore" : {
          "type" : "boolean",
          "default" : false
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      },
      "xml" : {
        "name" : "Collection",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/v3/common/"
      }
    },
    "Column" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "sqlType" : {
          "type" : "string"
        },
        "length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "displayName" : {
          "type" : "string"
        },
        "columnType" : {
          "type" : "string"
        },
        "indexed" : {
          "type" : "boolean",
          "default" : false
        },
        "unique" : {
          "type" : "boolean",
          "default" : false
        },
        "primaryKey" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ColumnMetadata" : {
      "type" : "object",
      "properties" : {
        "columnName" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Comment" : {
      "type" : "object",
      "properties" : {
        "commentStr" : {
          "type" : "string"
        },
        "commentScope" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "comment",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "CommentRequest" : {
      "type" : "object",
      "properties" : {
        "commentStr" : {
          "type" : "string"
        },
        "commentScope" : {
          "type" : "string"
        },
        "displayNameLanguage" : {
          "type" : "string"
        },
        "updatedDate" : {
          "type" : "string"
        },
        "updatedBy" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "commentRequest",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "Comments" : {
      "type" : "object",
      "properties" : {
        "comments" : {
          "type" : "array",
          "xml" : {
            "name" : "comment",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Comment"
          }
        }
      },
      "xml" : {
        "name" : "comments",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "CompositeStates" : {
      "type" : "object",
      "properties" : {
        "compositeState" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "xml" : {
        "name" : "compositesStates"
      }
    },
    "Composites" : {
      "type" : "object",
      "properties" : {
        "compositeDN" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "xml" : {
        "name" : "composites"
      }
    },
    "ContentDisposition" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "fileName" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modificationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "readDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Conversation" : {
      "type" : "object",
      "properties" : {
        "postMessageOnActivityEntryFlag" : {
          "type" : "boolean",
          "default" : false
        },
        "postMessageOnActivityExitFlag" : {
          "type" : "boolean",
          "default" : false
        },
        "postHumanTaskMessagesFlag" : {
          "type" : "boolean",
          "default" : false
        },
        "name" : {
          "type" : "string"
        },
        "conversationId" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "ConversationInstance" : {
      "type" : "object",
      "properties" : {
        "conversationId" : {
          "type" : "string"
        },
        "conversationName" : {
          "type" : "string"
        },
        "flowId" : {
          "type" : "string"
        },
        "processId" : {
          "type" : "string"
        },
        "appLink" : {
          "type" : "string"
        },
        "conversationTitle" : {
          "type" : "string"
        },
        "clistURL" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "conversationInstanceList",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "ConversationInstances" : {
      "type" : "object",
      "xml" : {
        "name" : "conversationInstances",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "Conversations" : {
      "type" : "object",
      "properties" : {
        "conversations" : {
          "type" : "array",
          "xml" : {
            "name" : "conversations",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/Conversation"
          }
        }
      },
      "xml" : {
        "name" : "conversations",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "DataObjectMetadata" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "columns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Column"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      },
      "xml" : {
        "name" : "DataObjectMetadata",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/DataObjectMetadata"
      }
    },
    "DataSeriesEntry" : {
      "type" : "object",
      "properties" : {
        "measureColumn" : {
          "type" : "string"
        },
        "aggregateOperation" : {
          "type" : "string",
          "enum" : [ "COUNT", "SUM", "AVG", "MIN", "MEDIAN", "MAX", "STDDEV", "COUNTDISTINCT", "VARIANCE" ]
        }
      },
      "xml" : {
        "name" : "DataSeriesEntry",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
      }
    },
    "DcsFolder" : {
      "type" : "object",
      "properties" : {
        "folderId" : {
          "type" : "string"
        },
        "folderName" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "permission" : {
          "type" : "string"
        },
        "mafLink" : {
          "type" : "string"
        },
        "appLink" : {
          "type" : "string"
        }
      }
    },
    "DcsFolders" : {
      "type" : "object",
      "xml" : {
        "name" : "dcsfolders",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "Documents" : {
      "type" : "object",
      "xml" : {
        "name" : "documents",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/process-definitions"
      }
    },
    "ExportLink" : {
      "type" : "object",
      "required" : [ "href" ],
      "properties" : {
        "href" : {
          "type" : "string",
          "format" : "uri"
        },
        "name" : {
          "type" : "string"
        },
        "md5" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "exportlink",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/archive"
      }
    },
    "Exports" : {
      "type" : "object",
      "properties" : {
        "exportLinks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExportLink"
          }
        },
        "exportCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "xml" : {
        "name" : "exports",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/archive"
      }
    },
    "Filter" : {
      "type" : "object",
      "properties" : {
        "filterType" : {
          "type" : "string",
          "enum" : [ "ALL", "ANY" ]
        },
        "filterEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FilterEntry"
          }
        },
        "branches" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Filter"
          }
        }
      },
      "xml" : {
        "name" : "filter",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
      }
    },
    "FilterEntry" : {
      "type" : "object",
      "properties" : {
        "columnName" : {
          "type" : "string"
        },
        "operator" : {
          "type" : "string",
          "enum" : [ "EQ", "LT", "LE", "GT", "GE", "NE", "LIKE", "NOTLIKE", "NULL", "NOTNULL" ]
        },
        "value" : {
          "type" : "string"
        },
        "columnDataType" : {
          "type" : "string",
          "enum" : [ "VARCHAR", "DATETIME", "INT", "DECIMAL", "FLOAT", "BOOLEAN" ]
        }
      },
      "xml" : {
        "name" : "filterEntry",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
      }
    },
    "GenericMap" : {
      "type" : "object",
      "properties" : {
        "dataType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "readOnly" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "genericMap",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "Group" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "identity" : {
          "$ref" : "#/definitions/Link"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "mobile" : {
          "type" : "string"
        },
        "workPhone" : {
          "type" : "string"
        },
        "grantees" : {
          "$ref" : "#/definitions/CollectionUser"
        },
        "managers" : {
          "$ref" : "#/definitions/CollectionUser"
        },
        "participants" : {
          "$ref" : "#/definitions/CollectionUser"
        },
        "tenantId" : {
          "type" : "string"
        },
        "tenantName" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "group",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/identities/group"
      }
    },
    "Identity" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "identity" : {
          "$ref" : "#/definitions/Link"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "mobile" : {
          "type" : "string"
        },
        "workPhone" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "identity",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/identities"
      }
    },
    "IncomingDocument" : {
      "type" : "object",
      "properties" : {
        "permission" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "IncomingFolder" : {
      "type" : "object",
      "properties" : {
        "permission" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "IncomingFolders" : {
      "type" : "object",
      "properties" : {
        "incomingFolders" : {
          "type" : "array",
          "xml" : {
            "name" : "incoming-folders",
            "wrapped" : true
          },
          "items" : {
            "$ref" : "#/definitions/IncomingFolder"
          }
        }
      },
      "xml" : {
        "name" : "incoming-folders",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/process-definitions"
      }
    },
    "Interface" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "operation" : {
          "type" : "string"
        },
        "startType" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "args" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Arg"
          }
        },
        "formMetadata" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "Link" : {
      "type" : "object",
      "required" : [ "href" ],
      "properties" : {
        "href" : {
          "type" : "string",
          "format" : "uri"
        }
      },
      "xml" : {
        "name" : "link",
        "namespace" : "http://xmlns.oracle.com/bpm/rest"
      }
    },
    "MediaType" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "subtype" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "wildcardType" : {
          "type" : "boolean",
          "default" : false
        },
        "wildcardSubtype" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "MessageInput" : {
      "type" : "object",
      "properties" : {
        "processDefId" : {
          "type" : "string"
        },
        "serviceName" : {
          "type" : "string"
        },
        "operation" : {
          "type" : "string"
        },
        "payload" : {
          "type" : "string"
        },
        "params" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "action" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "messageInput",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/processes"
      }
    },
    "MultiPart" : {
      "type" : "object",
      "properties" : {
        "entity" : {
          "type" : "object"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        },
        "parent" : {
          "$ref" : "#/definitions/MultiPart"
        },
        "providers" : {
          "$ref" : "#/definitions/Providers"
        },
        "bodyParts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BodyPart"
          }
        },
        "parameterizedHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ParameterizedHeader"
            }
          }
        },
        "contentDisposition" : {
          "$ref" : "#/definitions/ContentDisposition"
        }
      }
    },
    "ParameterizedHeader" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Payload" : {
      "type" : "object",
      "properties" : {
        "assignees" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Identity"
          }
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "processes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "faultActionType" : {
          "type" : "string"
        },
        "identities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Identity"
          }
        },
        "action" : {
          "$ref" : "#/definitions/Action"
        },
        "comment" : {
          "$ref" : "#/definitions/Comment"
        },
        "comments" : {
          "type" : "string"
        },
        "taskSummaryField" : {
          "$ref" : "#/definitions/TaskSummaryField"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "xml" : {
        "name" : "payload",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "ProcessDefs" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AbstractProcessDef"
          }
        }
      },
      "xml" : {
        "name" : "processDefs",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/processdef"
      }
    },
    "ProcessIcon" : {
      "type" : "object",
      "properties" : {
        "initials" : {
          "type" : "string"
        },
        "colorCode" : {
          "type" : "string"
        }
      }
    },
    "ProcessInstance" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string"
        },
        "processId" : {
          "type" : "string"
        },
        "processDefId" : {
          "type" : "string"
        },
        "processName" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ownedBy" : {
          "type" : "string",
          "xml" : {
            "name" : "owner"
          }
        },
        "createdBy" : {
          "type" : "string",
          "xml" : {
            "name" : "creator"
          }
        },
        "conversationId" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string"
        },
        "expirationDate" : {
          "type" : "string"
        },
        "dueDate" : {
          "type" : "string"
        },
        "processDN" : {
          "type" : "string"
        },
        "processNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "href" : {
          "type" : "string",
          "format" : "uri"
        },
        "isDocsEnabledFlag" : {
          "type" : "boolean",
          "default" : false
        },
        "isConversationEnabledFlag" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "processInstance",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/processdef"
      }
    },
    "Property" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "property",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
      }
    },
    "Providers" : {
      "type" : "object"
    },
    "QName" : {
      "type" : "object",
      "properties" : {
        "namespaceURI" : {
          "type" : "string"
        },
        "localPart" : {
          "type" : "string"
        },
        "prefix" : {
          "type" : "string"
        }
      }
    },
    "RequestResponse" : {
      "type" : "object",
      "properties" : {
        "link" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string",
          "xml" : {
            "name" : "jobId"
          }
        }
      },
      "xml" : {
        "name" : "request-response",
        "namespace" : "http://xmlns.oracle.com/bpm/archive/request-response"
      }
    },
    "Role" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "identity" : {
          "$ref" : "#/definitions/Link"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "mobile" : {
          "type" : "string"
        },
        "workPhone" : {
          "type" : "string"
        },
        "grantees" : {
          "$ref" : "#/definitions/CollectionUser"
        },
        "managers" : {
          "$ref" : "#/definitions/CollectionUser"
        },
        "participants" : {
          "$ref" : "#/definitions/CollectionUser"
        }
      },
      "xml" : {
        "name" : "role",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/Collection<Identity>/role"
      }
    },
    "Row" : {
      "type" : "object",
      "properties" : {
        "values" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "SortEntry" : {
      "type" : "object",
      "properties" : {
        "columnName" : {
          "type" : "string"
        },
        "descending" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "sortEntry",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
      }
    },
    "Task" : {
      "type" : "object",
      "required" : [ "href" ],
      "properties" : {
        "href" : {
          "type" : "string",
          "format" : "uri"
        },
        "attachments" : {
          "type" : "object"
        },
        "history" : {
          "type" : "object"
        },
        "comments" : {
          "type" : "object"
        },
        "payload" : {
          "type" : "object"
        },
        "isDocsEnabledFlag" : {
          "type" : "boolean",
          "default" : false
        },
        "isConversationEnabledFlag" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "task",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "TaskHistories" : {
      "type" : "object",
      "xml" : {
        "name" : "taskHistories",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "TaskSummaryField" : {
      "type" : "object",
      "properties" : {
        "summaryFields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GenericMap"
          }
        },
        "comment" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "xmlPayload" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "payload",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    },
    "TimeGrouping" : {
      "type" : "object",
      "properties" : {
        "timeGroupingUnits" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "YEAR", "QUARTER", "MONTH", "WEEK", "DAYOFYEAR", "DAYOFMONTH", "DAYOFWEEK", "HOUR", "MINUTE", "SECOND" ]
          }
        }
      },
      "xml" : {
        "name" : "timeGrouping",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/analytics/businessquery"
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "identity" : {
          "$ref" : "#/definitions/Link"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "mobile" : {
          "type" : "string"
        },
        "workPhone" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "fax" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "adminFlag" : {
          "type" : "boolean",
          "default" : false
        },
        "manager" : {
          "$ref" : "#/definitions/Link"
        },
        "pager" : {
          "type" : "string"
        },
        "reportees" : {
          "$ref" : "#/definitions/CollectionIdentity"
        },
        "timezone" : {
          "type" : "string"
        },
        "homePhone" : {
          "type" : "string"
        },
        "roles" : {
          "$ref" : "#/definitions/CollectionRole"
        },
        "groups" : {
          "$ref" : "#/definitions/CollectionGroup"
        }
      },
      "xml" : {
        "name" : "user",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/identities/user"
      }
    },
    "Views" : {
      "type" : "object",
      "xml" : {
        "name" : "tasks",
        "namespace" : "http://xmlns.oracle.com/bpm/rest/tasks"
      }
    }
  }
}
